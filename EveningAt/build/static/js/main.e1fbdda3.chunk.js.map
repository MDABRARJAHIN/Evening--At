{"version":3,"sources":["css/navbar.module.scss","css/auth.module.scss","actions/types.js","reducers/authReducer.js","reducers/restaurantsReducer.js","reducers/restaurantReducer.js","reducers/appointmentsReducer.js","reducers/index.js","store.js","actions/index.js","components/Navbar.js","containers/Home.js","components/Spinner.js","components/auth/Login.js","components/auth/Signup.js","containers/AppointmentList.js","containers/RestaurantList.js","components/Appointment.js","components/Restaurant.js","App.js","index.js","css/home.module.scss","css/app.module.scss","css/appointment.module.scss"],"names":["module","exports","API_URL","SET_ERROR","LOGIN_REQUEST","LOGIN_SUCCESS","TOGGLE_FORM","NOT_LOGGED_IN","LOGGED_IN","LOGOUT","FETCH_RESTAURANTS_PENDING","FETCH_RESTAURANTS_SUCCESS","FETCH_CURRENT_RESTAURANT_REQUEST","FETCH_CURRENT_RESTAURANT_SUCCESS","APPOINTMENT_ACTION_REQUEST","FETCH_APPOINTMENTS_SUCCESS","ADD_APPOINTMENT_SUCCESS","ADD_APPOINTMENT_FAILURE","authInitialState","loggedIn","user","error","loading","toggleForm","authReducer","state","action","type","payload","restaurantsInitialState","restaurants","restaurantsReducer","restaurantInitialState","restaurant","restaurantReducer","appointmentsInitialState","appointments","createStatus","appointmentsReducer","rootReducer","combineReducers","auth","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","requestPending","actionType","userLoginSuccess","requestFailure","logout","id","dispatch","localStorage","removeItem","Axios","delete","then","response","data","logged_out","catch","message","fetchCurrentRestaurant","get","status","fetchRestaurants","addAppointment","token","getItem","post","headers","Authorization","fetchAppointments","Navbar","username","userId","formFlag","className","styles","sidenav","closebtn","onClick","document","getElementById","style","width","marginLeft","items","item","to","header","menuBtn","icon","faBars","searchBtn","faSearchPlus","defaultProps","undefined","connect","loadForm","Home","userName","home","name","Spinner","role","login","password","loginDetails","logged_in","setItem","useState","setLoginDetails","formErrors","setFormErrors","isSubmitting","setIsSubmitting","handleChange","e","target","value","useEffect","Object","keys","length","onSubmit","preventDefault","values","errors","validate","noValidate","htmlFor","placeholder","onChange","email","signup","userPparams","userParams","created","error_messages","SignUnSchema","Yup","shape","required","min","passwordConfirmation","oneOf","initialValues","validationSchema","formik","touched","isValid","dirty","component","disabled","allAppointments","map","appointment","sn","scope","Date","date","toDateString","duration","location","date_created","colSpan","RestaurantList","fetchAllRestaurants","allRestaurants","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","responsive","breakpoint","settings","initialSlide","src","avatar_link","alt","description","PropTypes","func","Appointment","restaurantId","createAppointment","appointmentSchema","restaurant_id","submitForm","main","string","match","params","thisRestaurant","logoutUser","app","mainContent","exact","path","AppointmentList","Restaurant","mainTitle","authForm","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e1fbdda3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"navbar_header__29kit\",\"searchBtn\":\"navbar_searchBtn__1_sUc\",\"menuBtn\":\"navbar_menuBtn__5KyVO\",\"sidenav\":\"navbar_sidenav__1u8bS\",\"closebtn\":\"navbar_closebtn__1bPrB\",\"items\":\"navbar_items__3C-4r\",\"item\":\"navbar_item__K_Kl_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"auth_formInput__30TSV\",\"error\":\"auth_error__3HcEm\",\"inputError\":\"auth_inputError__1P7Xo\"};","export const API_URL = 'https://booking-app--api.herokuapp.com/api/v1';\r\n\r\nexport const SET_ERROR = 'SET_ERROR';\r\n\r\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const TOGGLE_FORM = 'TOGGLE_FORM';\r\n\r\nexport const NOT_LOGGED_IN = 'NOT_LOGGED_IN';\r\nexport const LOGGED_IN = 'LOGGED_IN';\r\n\r\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\r\nexport const LOGOUT = 'LOGOUT_SUCCESS';\r\n\r\nexport const FETCH_RESTAURANTS_PENDING = 'FETCH_RESTAURANTS_PENDING';\r\nexport const FETCH_RESTAURANTS_SUCCESS = 'FETCH_RESTAURANTS_SUCCESS';\r\n\r\nexport const FETCH_CURRENT_RESTAURANT_REQUEST = 'FETCH_CURRENT_RESTAURANT_REQUEST';\r\nexport const FETCH_CURRENT_RESTAURANT_SUCCESS = 'FETCH_CURRENT_RESTAURANT_SUCCESS';\r\n\r\nexport const APPOINTMENT_ACTION_REQUEST = 'APPOINTMENT_ACTION_REQUEST';\r\nexport const FETCH_APPOINTMENTS_SUCCESS = 'FETCH_APPOINTMENTS_SUCCESS';\r\nexport const ADD_APPOINTMENT_SUCCESS = 'ADD_APPOINTMENT_SUCCESS';\r\nexport const ADD_APPOINTMENT_FAILURE = 'ADD_APPOINTMENT_FAILURE';\r\n","import {\r\n  LOGIN_SUCCESS,\r\n  SET_ERROR,\r\n  LOGIN_REQUEST,\r\n  LOGGED_IN,\r\n  NOT_LOGGED_IN,\r\n  LOGOUT,\r\n  TOGGLE_FORM,\r\n} from '../actions/types';\r\n\r\nconst authInitialState = {\r\n  loggedIn: 'NOT_LOGGED_IN',\r\n  user: {},\r\n  error: '',\r\n  loading: false,\r\n  toggleForm: true,\r\n};\r\n\r\nconst authReducer = (state = authInitialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n      };\r\n    case TOGGLE_FORM:\r\n      return {\r\n        ...state,\r\n        toggleForm: !state.toggleForm,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        loggedIn: LOGGED_IN,\r\n        user: action.payload,\r\n        error: '',\r\n      };\r\n    case SET_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        loggedIn: NOT_LOGGED_IN,\r\n        user: {},\r\n        error: action.payload,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        loggedIn: NOT_LOGGED_IN,\r\n        user: {},\r\n        error: '',\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import {\r\n  SET_ERROR,\r\n  FETCH_RESTAURANTS_PENDING,\r\n  FETCH_RESTAURANTS_SUCCESS,\r\n} from '../actions/types';\r\n\r\nconst restaurantsInitialState = {\r\n  loading: false,\r\n  restaurants: [],\r\n  error: '',\r\n};\r\n\r\nconst restaurantsReducer = (state = restaurantsInitialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_RESTAURANTS_PENDING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case FETCH_RESTAURANTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        restaurants: action.payload,\r\n        error: '',\r\n      };\r\n    case SET_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        restaurants: [],\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default restaurantsReducer;\r\n","import {\r\n  FETCH_CURRENT_RESTAURANT_REQUEST,\r\n  FETCH_CURRENT_RESTAURANT_SUCCESS,\r\n  SET_ERROR,\r\n} from '../actions/types';\r\n\r\nconst restaurantInitialState = {\r\n  loading: false,\r\n  restaurant: {},\r\n  error: '',\r\n};\r\n\r\nconst restaurantReducer = (state = restaurantInitialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_CURRENT_RESTAURANT_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case FETCH_CURRENT_RESTAURANT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        restaurant: action.payload,\r\n        error: '',\r\n      };\r\n    case SET_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        restaurant: {},\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default restaurantReducer;\r\n","import {\r\n  ADD_APPOINTMENT_FAILURE,\r\n  ADD_APPOINTMENT_SUCCESS,\r\n  APPOINTMENT_ACTION_REQUEST,\r\n  SET_ERROR,\r\n  FETCH_APPOINTMENTS_SUCCESS,\r\n} from '../actions/types';\r\n\r\nconst appointmentsInitialState = {\r\n  loading: false,\r\n  appointments: [],\r\n  error: '',\r\n  createStatus: false,\r\n};\r\n\r\nconst appointmentsReducer = (state = appointmentsInitialState, action) => {\r\n  switch (action.type) {\r\n    case APPOINTMENT_ACTION_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case ADD_APPOINTMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        createStatus: true,\r\n      };\r\n    case ADD_APPOINTMENT_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n        createStatus: false,\r\n      };\r\n    case FETCH_APPOINTMENTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        appointments: action.payload,\r\n        error: '',\r\n        createStatus: false,\r\n      };\r\n    case SET_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n        createStatus: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default appointmentsReducer;\r\n","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport restaurantsReducer from './restaurantsReducer';\r\nimport restaurantReducer from './restaurantReducer';\r\nimport appointmentsReducer from './appointmentsReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  restaurants: restaurantsReducer,\r\n  restaurant: restaurantReducer,\r\n  appointments: appointmentsReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './reducers';\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware)),\r\n);\r\n\r\nexport default store;\r\n","import Axios from 'axios';\r\nimport {\r\n  API_URL,\r\n  ADD_APPOINTMENT_FAILURE,\r\n  ADD_APPOINTMENT_SUCCESS,\r\n  APPOINTMENT_ACTION_REQUEST,\r\n  SET_ERROR,\r\n  FETCH_APPOINTMENTS_SUCCESS,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_REQUEST,\r\n  LOGOUT,\r\n  LOGOUT_REQUEST,\r\n  TOGGLE_FORM,\r\n  FETCH_CURRENT_RESTAURANT_REQUEST,\r\n  FETCH_CURRENT_RESTAURANT_SUCCESS,\r\n  FETCH_RESTAURANTS_PENDING,\r\n  FETCH_RESTAURANTS_SUCCESS,\r\n} from './types';\r\n\r\n// Authentication\r\n\r\nexport const requestPending = (actionType) => ({\r\n  type: actionType,\r\n});\r\n\r\nexport const userLoginSuccess = (user) => ({\r\n  type: LOGIN_SUCCESS,\r\n  payload: user,\r\n});\r\n\r\nexport const requestFailure = (actionType, error) => ({\r\n  type: actionType,\r\n  payload: error,\r\n});\r\n\r\nexport const userLogout = () => ({\r\n  type: LOGOUT,\r\n});\r\n\r\nexport const toggleForm = () => ({\r\n  type: TOGGLE_FORM,\r\n});\r\n\r\nexport const login = (loginDetails) => (dispatch) => {\r\n  try {\r\n    dispatch(requestPending(LOGIN_REQUEST));\r\n    Axios.post(`${API_URL}/authentication`, loginDetails)\r\n      .then((response) => {\r\n        if (response.data.logged_in) {\r\n          localStorage.setItem('token', response.data.token);\r\n          dispatch(userLoginSuccess(response.data.user));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(\r\n          requestFailure(\r\n            SET_ERROR,\r\n            `${error.message}: Invalid Username or password`,\r\n          ),\r\n        );\r\n      });\r\n  } catch (error) {\r\n    dispatch(requestFailure(SET_ERROR, `${error.message}: Unexpected Error. Please try again.`));\r\n  }\r\n};\r\n\r\nexport const signup = (userParams) => (dispatch) => {\r\n  try {\r\n    dispatch(requestPending(LOGIN_REQUEST));\r\n    Axios.post(`${API_URL}/users`, userParams)\r\n      .then((response) => {\r\n        if (response.data.created) {\r\n          localStorage.setItem('token', response.data.token);\r\n          dispatch(userLoginSuccess(response.data.user));\r\n        }\r\n        if (!response.data.created) {\r\n          dispatch(requestFailure(SET_ERROR, response.data.error_messages));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(requestFailure(SET_ERROR, error.message));\r\n      });\r\n  } catch (error) {\r\n    dispatch(requestFailure(SET_ERROR, error.message));\r\n  }\r\n};\r\n\r\nexport const logout = (id) => (dispatch) => {\r\n  try {\r\n    dispatch(requestPending(LOGOUT_REQUEST));\r\n    localStorage.removeItem('token');\r\n    Axios.delete(`${API_URL}/authentication/${id}`)\r\n      .then((response) => {\r\n        if (response.data.logged_out) {\r\n          dispatch(userLogout());\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(requestFailure(SET_ERROR, error.message));\r\n      });\r\n  } catch (error) {\r\n    dispatch(requestFailure(SET_ERROR, error.message));\r\n  }\r\n};\r\n\r\n// Restaurant\r\n\r\nexport const fetchCurrentRestaurantSuccess = (restaurant) => ({\r\n  type: FETCH_CURRENT_RESTAURANT_SUCCESS,\r\n  payload: restaurant,\r\n});\r\n\r\nexport const fetchCurrentRestaurant = (id) => (dispatch) => {\r\n  try {\r\n    dispatch(requestPending(FETCH_CURRENT_RESTAURANT_REQUEST));\r\n    Axios.get(`${API_URL}/restaurants/${id}`)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          dispatch(fetchCurrentRestaurantSuccess(response.data));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(requestFailure(SET_ERROR, error.message));\r\n      });\r\n  } catch (error) {\r\n    dispatch(requestFailure(SET_ERROR, error.message));\r\n  }\r\n};\r\n\r\n// Restaurants\r\n\r\nexport const fetchRestaurantsSuccess = (restaurants) => ({\r\n  type: FETCH_RESTAURANTS_SUCCESS,\r\n  payload: restaurants,\r\n});\r\n\r\nexport const fetchRestaurants = () => (dispatch) => {\r\n  try {\r\n    dispatch(requestPending(FETCH_RESTAURANTS_PENDING));\r\n    Axios.get(`${API_URL}/restaurants`)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          dispatch(fetchRestaurantsSuccess(response.data));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(requestFailure(SET_ERROR, error.message));\r\n      });\r\n  } catch (error) {\r\n    dispatch(requestFailure(SET_ERROR, error.message));\r\n  }\r\n};\r\n\r\n// Appointments\r\n\r\nexport const makeAppointment = () => ({\r\n  type: ADD_APPOINTMENT_SUCCESS,\r\n});\r\n\r\nexport const fetchAllAppointments = (appointments) => ({\r\n  type: FETCH_APPOINTMENTS_SUCCESS,\r\n  payload: appointments,\r\n});\r\n\r\nexport const addAppointment = (data) => (dispatch) => {\r\n  try {\r\n    dispatch(requestPending(APPOINTMENT_ACTION_REQUEST));\r\n    const token = localStorage.getItem('token');\r\n    Axios.post(`${API_URL}/appointments`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 201) {\r\n          dispatch(makeAppointment());\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(requestFailure(ADD_APPOINTMENT_FAILURE, error.message));\r\n      });\r\n  } catch (error) {\r\n    dispatch(requestFailure(ADD_APPOINTMENT_FAILURE, error.message));\r\n  }\r\n};\r\n\r\nexport const fetchAppointments = () => (dispatch) => {\r\n  try {\r\n    dispatch(requestPending(APPOINTMENT_ACTION_REQUEST));\r\n    const token = localStorage.getItem('token');\r\n    Axios.get(`${API_URL}/appointments`,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          dispatch(fetchAllAppointments(response.data));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(requestFailure(SET_ERROR, error.message));\r\n      });\r\n  } catch (error) {\r\n    dispatch(requestFailure(SET_ERROR, error.message));\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars, faSearchPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { logout, toggleForm } from '../actions';\r\nimport { NOT_LOGGED_IN } from '../actions/types';\r\nimport styles from '../css/navbar.module.scss';\r\n\r\nconst Navbar = ({\r\n  logout,\r\n  username,\r\n  userId,\r\n  loggedIn,\r\n  toggleForm,\r\n  formFlag,\r\n}) => {\r\n  const handleClick = () => {\r\n    logout();\r\n  };\r\n\r\n  const openNav = () => {\r\n    document.getElementById('mySidenav').style.width = '250px';\r\n    document.getElementById('main').style.marginLeft = '250px';\r\n  };\r\n\r\n  const closeNav = () => {\r\n    document.getElementById('mySidenav').style.width = '0';\r\n    document.getElementById('main').style.marginLeft = '0';\r\n  };\r\n\r\n  const loggedInItems = () => (\r\n    <div className={styles.items}>\r\n      <p className=\"bold text-white\">\r\n        <span>Current User:</span>\r\n        {' '}\r\n        {username}\r\n      </p>\r\n      <ul>\r\n        <li className=\"text-white\">\r\n          <Link to=\"/\" className={styles.item}>\r\n            Home\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to={`/user/${userId}/appointments`} className={styles.item}>\r\n            Appointments\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/restaurants\" className={styles.item}>\r\n            All Restaurants\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => handleClick()}\r\n            className={styles.item}\r\n          >\r\n            Logout\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n\r\n  const notLoggedInItems = () => (\r\n    <div className={styles.items}>\r\n      <button type=\"button\" onClick={() => toggleForm()} className={styles.item}>\r\n        { formFlag ? 'Sign Up' : 'Login' }\r\n      </button>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <nav>\r\n      <div id=\"mySidenav\" className={styles.sidenav}>\r\n        <button\r\n          className={styles.closebtn}\r\n          type=\"button\"\r\n          onClick={() => closeNav()}\r\n        >\r\n          &times;\r\n        </button>\r\n        <h2 className=\"text-center\">Choose:</h2>\r\n        <span>\r\n          {loggedIn === NOT_LOGGED_IN ? notLoggedInItems() : loggedInItems()}\r\n        </span>\r\n      </div>\r\n      <div className={styles.header}>\r\n        <button\r\n          type=\"button\"\r\n          className={styles.menuBtn}\r\n          onClick={() => openNav()}\r\n        >\r\n          <FontAwesomeIcon icon={faBars} />\r\n        </button>\r\n        <h2 className=\"text-center\">Evening At</h2>\r\n        <button type=\"button\" className={styles.searchBtn}>\r\n          <FontAwesomeIcon icon={faSearchPlus} />\r\n        </button>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  username: undefined,\r\n  userId: undefined,\r\n};\r\n\r\nNavbar.propTypes = {\r\n  username: PropTypes.string,\r\n  logout: PropTypes.func.isRequired,\r\n  userId: PropTypes.number,\r\n  loggedIn: PropTypes.string.isRequired,\r\n  toggleForm: PropTypes.func.isRequired,\r\n  formFlag: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  username: state.auth.user.username,\r\n  userId: state.auth.user.id,\r\n  loggedIn: state.auth.loggedIn,\r\n  loadForm: state.auth.toggleForm,\r\n  formFlag: state.auth.toggleForm,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logout: () => dispatch(logout()),\r\n  toggleForm: () => dispatch(toggleForm()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../css/home.module.scss';\r\nimport { logout } from '../actions';\r\n\r\nfunction Home({ userName, logout }) {\r\n  return (\r\n    <section className={styles.home}>\r\n      <h3 className=\"d-flex justify-content-between\">\r\n        Welcome,\r\n        {' '}\r\n        {userName}\r\n        <small className=\"text-muted push-right\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger\"\r\n            onClick={() => logout()}\r\n          >\r\n            Logout\r\n          </button>\r\n        </small>\r\n      </h3>\r\n      <p className=\"font-weight-bolder\">\r\n        In this app you can do the following tasks:\r\n      </p>\r\n      <ul className=\"list-unstyled\">\r\n        <li className=\"\">\r\n          {' '}\r\n          - Check for the list of available restaurants\r\n        </li>\r\n        <li>\r\n          {' '}\r\n          - View details of each restaurant\r\n        </li>\r\n        <li>\r\n          {' '}\r\n          - Book an appointment with a Restaurant\r\n        </li>\r\n        <li>\r\n          {' '}\r\n          - Check all you booked appointments\r\n        </li>\r\n        <li>\r\n          {' '}\r\n          - Communicate with your friends\r\n        </li>\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nHome.defaultProps = {\r\n  userName: undefined,\r\n};\r\n\r\nHome.propTypes = {\r\n  userName: PropTypes.string,\r\n  logout: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userName: state.auth.user.name,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logout: () => dispatch(logout()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React from 'react';\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <div className=\"spinner-border spinner-border-sm mr-2\" role=\"status\">\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../actions';\r\nimport styles from '../../css/auth.module.scss';\r\nimport Spinner from '../Spinner';\r\n\r\nconst Login = ({ login, loading, error }) => {\r\n  const intialValues = { username: '', password: '' };\r\n  const [loginDetails, setLoginDetails] = useState(intialValues);\r\n  const [formErrors, setFormErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const submitForm = () => {\r\n    login(loginDetails);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setLoginDetails({ ...loginDetails, [name]: value });\r\n  };\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.username) {\r\n      errors.username = 'Hint: Username cannot be blank';\r\n    }\r\n    if (!values.password) {\r\n      errors.password = 'Hint: Password cannot be blank';\r\n    } else if (values.password.length < 6) {\r\n      errors.password = 'Password is definitely more than 5 characters';\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(formErrors).length === 0 && isSubmitting) {\r\n      submitForm();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [formErrors, isSubmitting]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setFormErrors(validate(loginDetails));\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4 className=\"mb-4\">Log in to continue</h4>\r\n      <span className=\"d-inline-block mb-2 text-danger\">{error}</span>\r\n      <form onSubmit={handleSubmit} noValidate>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">\r\n            <input\r\n              type=\"username\"\r\n              name=\"username\"\r\n              id=\"username\"\r\n              placeholder=\"Enter username here\"\r\n              value={loginDetails.username}\r\n              onChange={handleChange}\r\n              className={`${formErrors.username && 'is-invalid'} form-control`}\r\n            />\r\n          </label>\r\n          {formErrors.email && (\r\n            <span className={`${styles.error} d-block`}>\r\n              {formErrors.username}\r\n            </span>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              value={loginDetails.password}\r\n              placeholder=\"Enter password here\"\r\n              onChange={handleChange}\r\n              className={`${formErrors.password && 'is-invalid'} form-control`}\r\n            />\r\n          </label>\r\n          {formErrors.password && (\r\n            <span className={`${styles.error} d-block`}>\r\n              {formErrors.password}\r\n            </span>\r\n          )}\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-light mb-3\">\r\n          {loading ? <Spinner /> : ''}\r\n          Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loading: state.auth.loading,\r\n  error: state.auth.error,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  login: (username, password) => dispatch(login(username, password)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Formik, Form, Field, ErrorMessage,\r\n} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { signup } from '../../actions';\r\nimport styles from '../../css/auth.module.scss';\r\nimport Spinner from '../Spinner';\r\n\r\nconst Signup = ({ signup, loading, error }) => {\r\n  const initialValues = {\r\n    name: '',\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    passwordConfirmation: '',\r\n  };\r\n\r\n  const SignUnSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .required('Name is required')\r\n      .min(6, 'Name is too short - should be 6 characters minimum'),\r\n\r\n    username: Yup.string()\r\n      .required('Username is required')\r\n      .min(6, 'Username is too short - should be 6 characters minimum'),\r\n\r\n    email: Yup.string().email('Invalid Email address').required('Email is required'),\r\n\r\n    password: Yup.string()\r\n      .required('Password is required')\r\n      .min(6, 'Password is too short - should be 6 chars minimum'),\r\n\r\n    passwordConfirmation: Yup.string()\r\n      .oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={SignUnSchema}\r\n      onSubmit={(values) => {\r\n        signup(values);\r\n      }}\r\n    >\r\n      {(formik) => {\r\n        const {\r\n          errors, touched, isValid, dirty,\r\n        } = formik;\r\n        return (\r\n          <div className=\"form-container\">\r\n            <h4 className=\"mb-3\">Registration form</h4>\r\n            {\r\n              error === 'You are not authorized. Please login.' ? ''\r\n                : (<span className=\"d-inline-block mb-1 text-danger\">{error}</span>)\r\n            }\r\n            <Form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">\r\n                  <Field\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    placeholder=\"Enter Name here\"\r\n                    className={`${\r\n                      errors.name && touched.name ? 'is-invalid' : 'is-valid'\r\n                    } form-control`}\r\n                  />\r\n                </label>\r\n                <ErrorMessage\r\n                  name=\"name\"\r\n                  component=\"span\"\r\n                  className={`${styles.error} d-block`}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"username\">\r\n                  <Field\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    id=\"username\"\r\n                    placeholder=\"Enter username here\"\r\n                    className={`${\r\n                      errors.username && touched.username\r\n                        ? 'is-invalid'\r\n                        : 'is-valid'\r\n                    } form-control`}\r\n                  />\r\n                </label>\r\n                <ErrorMessage\r\n                  name=\"username\"\r\n                  component=\"span\"\r\n                  className={`${styles.error} d-block`}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"username\">\r\n                  <Field\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    placeholder=\"Enter email here\"\r\n                    className={`${\r\n                      errors.email && touched.email ? 'is-invalid' : 'is-valid'\r\n                    } form-control`}\r\n                  />\r\n                </label>\r\n                <ErrorMessage\r\n                  name=\"email\"\r\n                  component=\"span\"\r\n                  className={`${styles.error} d-block`}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">\r\n                  <Field\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    placeholder=\"Enter password here\"\r\n                    className={`${\r\n                      errors.password && touched.password\r\n                        ? 'is-invalid'\r\n                        : 'is-valid'\r\n                    } form-control`}\r\n                  />\r\n                </label>\r\n                <ErrorMessage\r\n                  name=\"password\"\r\n                  component=\"span\"\r\n                  className={`${styles.error} d-block`}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"passwordConfirmation\">\r\n                  <Field\r\n                    type=\"password\"\r\n                    name=\"passwordConfirmation\"\r\n                    id=\"passwordConfirmation\"\r\n                    placeholder=\"Re-enter password here\"\r\n                    className={`${\r\n                      errors.passwordConfirmation\r\n                      && touched.passwordConfirmation\r\n                        ? 'is-invalid'\r\n                        : 'is-valid'\r\n                    } form-control`}\r\n                  />\r\n                </label>\r\n                <ErrorMessage\r\n                  name=\"passwordConfirmation\"\r\n                  component=\"span\"\r\n                  className={`${styles.error} d-block`}\r\n                />\r\n              </div>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className={`${\r\n                  !(dirty && isValid) ? 'disabled-btn' : ''\r\n                } btn btn-light mb-4`}\r\n                disabled={!(dirty && isValid)}\r\n              >\r\n                {loading ? <Spinner /> : ''}\r\n                {' '}\r\n                Register\r\n              </button>\r\n            </Form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nSignup.propTypes = {\r\n  signup: PropTypes.func.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loading: state.auth.loading,\r\n  error: state.auth.error,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signup: (userPparams) => dispatch(signup(userPparams)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { fetchAppointments } from '../actions';\r\nimport styles from '../css/appointment.module.scss';\r\n\r\nfunction AppointmentList({ fetchAppointments, appointments }) {\r\n  useEffect(() => {\r\n    fetchAppointments();\r\n  }, [fetchAppointments]);\r\n\r\n  const allAppointments = Object.keys(appointments).length ? (\r\n    appointments.map((appointment, sn) => (\r\n      <tr key={appointment.id}>\r\n        <th scope=\"row\">{sn + 1}</th>\r\n        <td>{new Date(appointment.date).toDateString()}</td>\r\n        <td>{`${appointment.duration} Minutes`}</td>\r\n        <td>{`${appointment.restaurant} (${appointment.location})`}</td>\r\n        <td>{new Date(appointment.date_created).toDateString()}</td>\r\n        <td>{appointment.status}</td>\r\n      </tr>\r\n    ))\r\n  ) : (\r\n    <tr>\r\n      <td colSpan=\"6\">No appointments made yet.</td>\r\n    </tr>\r\n  );\r\n\r\n  return (\r\n    <section className={`${styles.appointments} bg-white p-4 table-responsive`}>\r\n      <h4 className=\"text-uppercase font-weight-bolder mb-4\">\r\n        All Appointments\r\n      </h4>\r\n      <table className=\"table\">\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Appointment Date</th>\r\n            <th scope=\"col\">Expected Duration</th>\r\n            <th scope=\"col\">Restaurant Name (Location)</th>\r\n            <th scope=\"col\">Date Submitted</th>\r\n            <th scope=\"col\">Status</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{allAppointments}</tbody>\r\n      </table>\r\n    </section>\r\n  );\r\n}\r\n\r\nAppointmentList.propTypes = {\r\n  appointments: PropTypes.arrayOf(Object).isRequired,\r\n  fetchAppointments: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  appointments: state.appointments.appointments,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchAppointments: () => dispatch(fetchAppointments()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppointmentList);\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Slider from 'react-slick';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport { fetchRestaurants } from '../actions';\r\nimport home from '../css/home.module.scss';\r\nimport Spinner from '../components/Spinner';\r\n\r\nconst RestaurantList = ({ loading, restaurants, fetchAllRestaurants }) => {\r\n  useEffect(() => {\r\n    fetchAllRestaurants();\r\n  }, [fetchAllRestaurants]);\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 1000,\r\n    slidesToShow: 3,\r\n    slidesToScroll: 3,\r\n    autoplay: true,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 2,\r\n          infinite: true,\r\n          dots: true,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1,\r\n          initialSlide: 1,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  const allRestaurants = restaurants && restaurants.length > 0 ? (\r\n    <Slider {...settings}>\r\n      {restaurants.map((restaurant) => (\r\n        <article className=\"text-center px-3 my-3 card d-flex card-style\" key={restaurant.id}>\r\n          <img\r\n            src={restaurant.avatar_link}\r\n            className=\"img-fluid main-img text-center justify-content-center mx-auto\"\r\n            alt={restaurant.name}\r\n          />\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title text-uppercase mt-2\">\r\n              {restaurant.name}\r\n            </h5>\r\n            <p className=\"card-text\">{restaurant.description}</p>\r\n          </div>\r\n          <div className=\"card-footer text-muted\">\r\n            <Link\r\n              to={`/restaurants/${restaurant.id}`}\r\n              className=\"btn btn-success\"\r\n            >\r\n              View Details\r\n            </Link>\r\n          </div>\r\n        </article>\r\n      ))}\r\n    </Slider>\r\n  ) : (\r\n    <p>There are currently no restaurants available. please check later. </p>\r\n  );\r\n\r\n  if (loading) {\r\n    return <div><Spinner /></div>;\r\n  }\r\n\r\n  return (\r\n    <div className={home.home}>\r\n      <h4 className=\"font-weight-bold text-center mb-5 text-uppercase\">\r\n        All Restaurants List\r\n        <small className=\"text-muted push-right text-lowercase d-block\">\r\n          click the button below each restaurant to see more details\r\n        </small>\r\n      </h4>\r\n      {allRestaurants}\r\n    </div>\r\n  );\r\n};\r\n\r\nRestaurantList.defaultProps = {\r\n  fetchAllRestaurants: PropTypes.func,\r\n};\r\n\r\nRestaurantList.propTypes = {\r\n  fetchAllRestaurants: PropTypes.func,\r\n  loading: PropTypes.bool.isRequired,\r\n  restaurants: PropTypes.arrayOf(Object).isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loading: state.restaurants.loading,\r\n  restaurants: state.restaurants.restaurants,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchAllRestaurants: () => dispatch(fetchRestaurants()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RestaurantList);\r\n","/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Formik, Form, Field, ErrorMessage,\r\n} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { addAppointment } from '../actions';\r\nimport styles from '../css/appointment.module.scss';\r\nimport Spinner from './Spinner';\r\n\r\nconst Appointment = ({\r\n  restaurantId, createAppointment, error, loading, createStatus,\r\n}) => {\r\n  const initialValues = {\r\n    date: '',\r\n    duration: '',\r\n  };\r\n\r\n  const appointmentSchema = Yup.object().shape({\r\n    date: Yup.date()\r\n      .required('Date is required'),\r\n\r\n    duration: Yup.number()\r\n      .required('Duration is required'),\r\n  });\r\n\r\n  const submitForm = (values) => {\r\n    const status = new Date(values.date) < new Date() ? 'Past' : 'Upcoming';\r\n    const data = {\r\n      restaurant_id: restaurantId, date: values.date, duration: values.duration, status,\r\n    };\r\n    createAppointment(data);\r\n  };\r\n\r\n  const message = () => (error === '' && createStatus ? (\r\n    <span className=\"text-success\">Appointment booked successfully.</span>\r\n  ) : (\r\n    <span className=\"text-danger\">\r\n      {error}\r\n    </span>\r\n  ));\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={appointmentSchema}\r\n      onSubmit={(values) => { submitForm(values); }}\r\n    >\r\n      {(formik) => {\r\n        const {\r\n          errors, touched, isValid, dirty,\r\n        } = formik;\r\n        return (\r\n          <div className={`${styles.main} mt-5 pl-3 border-top pt-3`}>\r\n            <h6 className=\"my-4\">Make Appointment</h6>\r\n            <Form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"date\">Select Date:</label>\r\n                <Field\r\n                  type=\"datetime-local\"\r\n                  name=\"date\"\r\n                  id=\"date\"\r\n                  className={`${\r\n                    errors.date && touched.date ? 'is-invalid' : 'is-valid'\r\n                  } form-control`}\r\n                />\r\n\r\n                <ErrorMessage\r\n                  name=\"date\"\r\n                  component=\"span\"\r\n                  className=\"text-danger\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"duration\">Estimated Duration (Minutes):</label>\r\n                <Field\r\n                  type=\"number\"\r\n                  name=\"duration\"\r\n                  id=\"duration\"\r\n                  className={`${\r\n                    errors.duration && touched.duration\r\n                      ? 'is-invalid'\r\n                      : 'is-valid'\r\n                  } form-control`}\r\n                />\r\n                <ErrorMessage\r\n                  name=\"duration\"\r\n                  component=\"span\"\r\n                  className=\"text-danger\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <button\r\n                  type=\"submit\"\r\n                  className={`${!(dirty && isValid) ? 'disabled-btn' : ''} btn btn-success`}\r\n                  disabled={!(dirty && isValid)}\r\n                >\r\n                  { loading ? <Spinner /> : ''}\r\n                  Book an Appointment\r\n                </button>\r\n              </div>\r\n            </Form>\r\n            <div className=\"mt-3\" />\r\n            <p>\r\n              { loading ? '' : message() }\r\n            </p>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nAppointment.defaultProps = {\r\n  error: PropTypes.string,\r\n};\r\n\r\nAppointment.propTypes = {\r\n  restaurantId: PropTypes.number.isRequired,\r\n  createAppointment: PropTypes.func.isRequired,\r\n  user: PropTypes.shape({\r\n    email: PropTypes.string,\r\n    id: PropTypes.number,\r\n    name: PropTypes.string,\r\n    username: PropTypes.string,\r\n  }).isRequired,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  createStatus: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user,\r\n  error: state.appointments.error,\r\n  loading: state.appointments.loading,\r\n  createStatus: state.appointments.createStatus,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createAppointment: (data) => dispatch(addAppointment(data)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Appointment);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { fetchCurrentRestaurant } from '../actions';\r\nimport Appointment from './Appointment';\r\nimport home from '../css/home.module.scss';\r\nimport Spinner from './Spinner';\r\n\r\nconst Restaurant = ({\r\n  loading, restaurant, fetchCurrentRestaurant, match,\r\n}) => {\r\n  useEffect(\r\n    () => {\r\n      fetchCurrentRestaurant(match.params.id);\r\n    },\r\n    [fetchCurrentRestaurant, match.params.id],\r\n  );\r\n\r\n  const thisRestaurant = Object.keys(restaurant).length ? (\r\n    <section className=\"d-md-flex text-center flex-wrap\">\r\n      <div className=\"w-md-50 w-sm-50 justify-content-center mx-auto\">\r\n        <img\r\n          src={restaurant.avatar_link}\r\n          alt=\"Restaurant Img\"\r\n          className=\"img-fluid rounded w-100\"\r\n        />\r\n      </div>\r\n      <aside className=\"w-md-50 text-center mt-3 mt-md-0 text-md-right\">\r\n        <h5 className=\"font-weight-bold mb-3 text-uppercase\">\r\n          {restaurant.name}\r\n        </h5>\r\n        <p>\r\n          Food type:\r\n          {' '}\r\n          {restaurant.description}\r\n        </p>\r\n        <p>\r\n          Location:\r\n          {' '}\r\n          {restaurant.location}\r\n        </p>\r\n        <Appointment restaurantId={restaurant.id} />\r\n      </aside>\r\n    </section>\r\n  ) : (\r\n    <div className=\"text-center\"><Spinner /></div>\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <Spinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section className={home.home}>\r\n      <h4 className=\"font-weight-bold mb-5 text-uppercase\">\r\n        Restaurant Details\r\n      </h4>\r\n      {thisRestaurant}\r\n    </section>\r\n  );\r\n};\r\n\r\nRestaurant.propTypes = {\r\n  loading: PropTypes.bool.isRequired,\r\n  fetchCurrentRestaurant: PropTypes.func.isRequired,\r\n  restaurant: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string,\r\n    description: PropTypes.string,\r\n    location: PropTypes.string,\r\n    avatar_link: PropTypes.string,\r\n  }).isRequired,\r\n  match: PropTypes.shape({\r\n    params: PropTypes.shape({ id: PropTypes.string }),\r\n    path: PropTypes.string,\r\n    url: PropTypes.string,\r\n    isExact: PropTypes.bool,\r\n  }).isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loading: state.restaurants.loading,\r\n  restaurant: state.restaurant.restaurant,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchCurrentRestaurant: (restaurantId) => dispatch(fetchCurrentRestaurant(restaurantId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Restaurant);\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Navbar from './components/Navbar';\r\nimport Home from './containers/Home';\r\nimport { logout, toggleForm } from './actions';\r\nimport Login from './components/auth/Login';\r\nimport Signup from './components/auth/Signup';\r\nimport AppointmentList from './containers/AppointmentList';\r\nimport RestaurantList from './containers/RestaurantList';\r\nimport Restaurant from './components/Restaurant';\r\nimport styles from './css/app.module.scss';\r\n\r\nconst App = ({ formFlag, toggleForm }) => {\r\n  const loggedInScreen = () => (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route\r\n        exact\r\n        path=\"/user/:user_id/appointments\"\r\n        component={AppointmentList}\r\n      />\r\n      <Route exact path=\"/restaurants\" component={RestaurantList} />\r\n      <Route exact path=\"/restaurants/:id\" component={Restaurant} />\r\n    </Switch>\r\n  );\r\n  const details = () => (\r\n    <div>\r\n      <h1 className={`${styles.mainTitle} mb-2 text-white`}>Book an Appointment for a Restaurant and Meet New Friends</h1>\r\n    </div>\r\n  );\r\n\r\n  const authForms = () => {\r\n    if (formFlag) {\r\n      return (\r\n        <article className={styles.authForm}>\r\n          <Login />\r\n          <p>\r\n            New User?\r\n            {' '}\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => toggleForm()}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              Sign up here\r\n            </button>\r\n          </p>\r\n        </article>\r\n      );\r\n    }\r\n    return (\r\n      <article className={styles.authForm}>\r\n        <Signup />\r\n        <p>\r\n          Existing User?\r\n          {' '}\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => toggleForm()}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Log in here\r\n          </button>\r\n        </p>\r\n      </article>\r\n    );\r\n  };\r\n  return (\r\n    <BrowserRouter>\r\n      <main className={`${styles.app}`} id=\"main\">\r\n        <header>\r\n          <Navbar toggleForm={toggleForm} />\r\n        </header>\r\n        <div\r\n          className={`${styles.mainContent} mx-5 px-sm-1 py-5 text-center text-white`}\r\n        >\r\n          {localStorage.token ? loggedInScreen() : (\r\n            <div>\r\n              {details()}\r\n              {authForms()}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </main>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nApp.propTypes = {\r\n  formFlag: PropTypes.bool.isRequired,\r\n  toggleForm: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  status: state.auth.loggedIn,\r\n  formFlag: state.auth.toggleForm,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logoutUser: () => dispatch(logout()),\r\n  toggleForm: () => dispatch(toggleForm()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './custom.scss';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"home_home__1kEf7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__3-A6D\",\"mainContent\":\"app_mainContent__2SL8a\",\"mainTitle\":\"app_mainTitle__35bhg\",\"details\":\"app_details__1jmfJ\",\"authForm\":\"app_authForm__1pAA2\",\"pb-5\":\"app_pb-5__2Jfkq\",\"py-5\":\"app_py-5__22KCt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"appointment_main__2M2b8\",\"appointments\":\"appointment_appointments__bh1AS\"};"],"sourceRoot":""}